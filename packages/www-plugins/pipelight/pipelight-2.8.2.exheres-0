# Copyright 1999-2016 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

require my_ever_is_scm

if [ my_ever_is_scm ] ; then
	
	SCM_REPOSITORY="https://bitbucket.org/mmueller2012/${PN}.git"
	REQUIRE_SCM=scm-git
else
	DOWNLOADS="https://bitbucket.org/mmueller2012/${PN}/get/v${PV}.tar.gz -> ${PNV}.tar.gz"
	
fi

PLATFORMS='~x86 ~amd64'

SUMMARY='Wine-based wrapper for running Windows plugins on POSIX systems'
HOMEPAGE="https://launchpad.net/${PN}"

LICENCES="|| ( GPL-2+ LGPL-2.1+ MPL-1.1 )"
SLOT='0'

MYOPTIONS='
	( gnome kde ) [[ number-selected = exactly-one ]]
	(
		platform:
			x86
			amd64
	)

'

# wine[X]
# firefox
DEPENDENCIES='
	build:
		app-arch/cabextract
	build+run:
		app-emulation/wine[staging]
	run:
		app-crypt/gnupg
		fonts/corefonts
	
		gnome? ( gnome-desktop/zenity )
		kde? ( kde/kdialog )
'

DEFAULT_SRC_CONFIGURE_PARAMS+=(
	--cxx=$( exhost --tool-prefix )g++
	--win32-flags=-Wb,--nm-cmd=$( exhost --tool-prefix )nm
)

require my_default_src_configure_params ${REQUIRE_SCM}

src_prepare()
{
	local WINDIR=src/windows/

	edo sed -e 's/(CXX)/(CXX) $(win32_flags)/g' -i ${WINDIR}winecheck/Makefile ${WINDIR}pluginloader/Makefile

	default
}

src_configure() {

	TGT=/usr/$( exhost --target )
	BINDIR=${TGT}/bin/
	TGT32BIN=/usr/i686-pc-linux-gnu/bin/

	my_default_src_configure_params "--wine-path=${TGT32BIN}wine --win32-cxx=${TGT32BIN}wineg++"

	optionq platform:amd64 && my_default_src_configure_params "--with-win64" "--win64-cxx=${BINDIR}wineg++" "--wine64-path=${BINDIR}wine64 )"

	default
}

src_install() {
	default

	local LIBDIR=${IMAGE}${TGT}/lib/${PN}

	# Ideally, every wrapped plugin could be a symlink to pipelight's wrapper
	# plugin, but some browsers do not like this. Upstream provides a script to
	# duplicate the wrapper plugin as a hack to work around it.  That script
	# does not support DESTDIR, so we use sed to adjust it before running it to
	# properly duplicate the plugins.
	# XXX: Patch the script to support ${IMAGE} and send the patch upstream.
	edo sed -e "s:^\(PIPELIGHT_LIBRARY_PATH=\"\)\\(.*\):\1${LIBDIR}\":" \
		-e "s:^\(PLUGIN_PATH=\"\)\\(.*\):\1${LIBDIR}\":" \
		"${IMAGE}${BINDIR}/pipelight-plugin" > "${TEMP}/pipelight-plugin" 

	edo chmod u+x "${TEMP}/pipelight-plugin" 
		

	# Create Plugins
	edo "${TEMP}/pipelight-plugin" --create-mozilla-plugins

	# Check if this can be omitted.
	edo find "${IMAGE}" -type d -empty -delete
}

postinst() {
	# Obligatory warnings about proprietary software
	ewarn "Neither the Exherbo developers nor the Pipelight developers can"
	ewarn "patch security vulnerabilities in Windows plugins. Use them at your"
	ewarn "own risk."
	# Warn about missing pipelight-sandbox
	ewarn
	ewarn "The pipelight sandbox has not been packaged yet. Plugins will have"
	ewarn "full privileges as Windows programs running inside wine."

	# Helpful information for those willing to live dangerously
	einfo "Using Windows plugins on certain websites might require a useragent"
	einfo "switcher. See the upstream tutorial for more details."
	einfo
	einfo "http://www.pipelight.net/cms/installation-user-agent.html"
	einfo
	einfo "End users should use the pipelight-plugin utility to install and"
	einfo "manage plugins. Updates are done at plugin initialization whenever"
	einfo "/usr/share/pipelight/install-dependency has been updated. This can"
	einfo "be done either by doing updates via portage or by running"
	einfo "pipelight-plugin --update as root. Browsers like Chrome (all"
	einfo "versions before 35) will initialize plugins at boot while browsers"
	einfo "like Firefox will initialize plugins on demand."
	einfo
	# Users must be in the video group for video acceleration
	einfo "Membership in the video group is required for using plugins that"
	einfo "feature hardware acceleration for video decoding. This is important"
	einfo "for video streaming sites that use Silverlight."
}