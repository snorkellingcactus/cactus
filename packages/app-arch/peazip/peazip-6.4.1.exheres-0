# Copyright 2017 Nadal Gonzalo Garc√≠a Zavala <snorkellingcactus@gmail.com>
# Based in part upon 'peazip-5.5.2.ebuild', which is:
# Copyright 1999-2016 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

DESCRIPTION='Open Source file and archive manager: flexible, portable, secure, and free as in freedom'
HOMEPAGE="http://www.${PN}.org"
DOWNLOADS="mirror://sourceforge/${PN}/${PNV}.src.zip"

LICENCES='LGPL-3 GPL-2 unRAR LGPL-2.1 GPL-3'
SLOT='0'
PLATFORMS='~x86 ~amd64'
MYOPTIONS='
	( qt4 gtk ) [[
		number-selected = exactly-one
	]]
	( platform: x86 amd64 )
'

DEPENDENCIES="
	build:
		dev-lang/fpc
		dev-lang/lazarus
	build+run:
		group/${PN}
		user/${PN}
		gtk? (
			x11-libs/cairo
			x11-libs/gdk-pixbuf:2
			x11-libs/gtk+:2
			x11-libs/pango
		)
		qt4? (
			build+run:
			x11-libs/qt:4
			dev-qt/qtpascal:4
		)
		app-arch/p7zip
"

# QA_PRESTRIPPED="opt/peazip/peazip"

WORK="${WORKBASE}/${PNV}.src"

require doinsmv domenu newicon lang-helper [ linguas='chs gl vn eu it en es-la ru en-gb pl uk cz tj gr by-lt bg pt-pt ja de-uml pt-br si sk uz hu nl ar fi de-uml-alt ro tr es-es ko no by-cr fr default sv cht' ] freedesktop-desktop freedesktop-mime

buff_get()
{
	if [ "${BUFF_CURRENT}" = 'B' ]
	then
		echo "${BUFF_B}"
	else
		echo "${BUFF_A}"
	fi
}
buff_set()
{
	if [ "${BUFF_CURRENT}" = 'B' ]
	then
		BUFF_B="${1#${SRC_SYM_LEADING}}"
	else
		BUFF_A="${1}"
	fi
}
buff_append()
{
	buff_set "$( buff_get )${1}"
}
buff_sw()
{
	if [ "${BUFF_COUNT}" = "2" ]
	then
		BUFF_A="${BUFF_A#/}"

		local DIR="${BUFF_A%$( basename "${BUFF_A}" )}"

		DIR="${DEST_DIR}/${DIR%/}"

		local FILE="${DEST_DIR}/${BUFF_A}"

		[ ! -d "${DIR}" ] && edo mkdir -p "${DIR}"

		[ ! -e "${FILE}" ] && edo ln -s "${BUFF_B}" "${DIR}"

		BUFF_A=''
		BUFF_B=''
		BUFF_COUNT=0
	fi
	let BUFF_COUNT++

	if [ "${BUFF_CURRENT}" = 'A' ]
	then
		BUFF_CURRENT='B'
	else
		BUFF_CURRENT='A'

		BUFF_A=''
		BUFF_B=''
	fi
}

fakedir()
{
	local BUFF_A BUFF_B BUFF_CURRENT BUFF_COUNT SRC_SYM_DIR SRC_SYM_LEADING DEST_DIR

	if [ ! -z "${3}" ]
	then
		local SRC_SYM_LEADING="${1}"
		shift
	fi

	SRC_SYM_DIR="${1}"
	DEST_DIR="${2}"

	# [ -d "${DEST_DIR}" ] && edo rm -r "${DEST_DIR}"

    edo mkdir -p "${DEST_DIR}"

	buff_sw

	for i in $(
		find "${SRC_SYM_LEADING}${SRC_SYM_DIR}" -type f -printf '%P;%p; '
	)
	do
		while [ "${i}" != "${i/;}" ]
		do
			buff_append "$(echo ${i} | cut -d';' -f1)"

			buff_sw

			i="${i#*;}"
		done
		
		if [ ! -z "${i}" ]
		then
			buff_append "${i} "
		fi
	done
}

fakelazdir()
{
	SRC_SYM_DIR=${TGT}share/lazarus
	DEST_DIR="${LZDIR}"

    local BUFF_A BUFF_B BUFF_CURRENT BUFF_COUNT
    buff_sw

	for i in lpl dci ico sh bat cfg TXT msg lpi lpr lpk xpm lrs rc xml fpc rsj res o lfm txt pas pp ppu ppl inc
	do
		for i in $(
			find ${SRC_SYM_DIR} -name "*.${i}" -type f -printf '%P;%p; '
		)
		do
			while [ "${i}" != "${i/;}" ]
			do
				buff_append "$(echo ${i} | cut -d';' -f1)"

				buff_sw

				i="${i#*;}"
			done
			
			if [ ! -z "${i}" ]
			then
				buff_append "${i} "
			fi
		done
	done
}
lazarus_src_compile()
{
	local LZDIR=${TGT}/share/lazarus
    #local LZDIR=${WORK}/LZ
	#fakedir

	esandbox disable

	edo ${TGT}/bin/lazbuild -r --verbose --lazarusdir=${LZDIR} "${@}"

	esandbox enable
}

peazip_remove_locale()
{	
	! optionq linguas:${l} && rm -f "${1}${2}.txt" &>/dev/null
}

src_prepare(){
	optionq platform:amd64 && export CPU_TARGET="x86_64" || export CPU_TARGET="i386"

	export lazpath="/usr/share/lazarus"

	sed -e 's@</CompilerOptions>@<Other><CustomOptions Value="-XP'"$( exhost --tool-prefix )"'"/></Other></CompilerOptions>@' -i project_peach.lpi -i project_pea.lpi -i project_gwrap.lpi

#	epatch "${FILESDIR}/desktop_file.patch"
}

src_compile() {

	TGT=/usr/$( exhost --target )/

    if optionq qt4; then
        ws=qt
#        edo cp --dereference ${TGT}/lib/libQt4Pas.so "${WORK}"
    else
        ws=gtk2
    fi

    lazarus_src_compile project_peach.lpr --widgetset="${ws}"
    lazarus_src_compile project_pea.lpr --widgetset="${ws}"
    lazarus_src_compile project_gwrap.lpi --widgetset="${ws}"
}

# TODO: remove unneeded lang lines of .desktop
# TODO: convert names like es-es to es_ES
# TODO: separate paths, data arch-independent, arch-dependent, writable data, readonly data.
src_install()
{
	doicon -s 256 FreeDesktop_integration/${PN}.png

	# When peazip tries to uncompress it searches the 7z
	# binary in ../res/7z like /usr/${TARGET}/peazip/../res/7z
	# so i do this hack where peazip is placed under a directory
	# with the same name and containing the right res -> peazip/res/7z
	# symlink.
	local INTO_EXE_PARENT=${TGT}share/${PN}/
	INTO_EXE=${INTO_EXE_PARENT}/${PN}/

	exeinto ${INTO_EXE}
		doexe ${PN}
	exeinto ${INTO_EXE}res
		doexe pea
		doexe pealauncher

	local TDIR="res/lang/"

	lang-helper-linguas-loop 'peazip_remove_locale '"${TDIR}"

	rm -df "${TDIR}"
	rm -r res/lang-wincontext
	touch res/{bookmarks.txt,conf-lastgood.txt,custedit.txt,rnd}

	local PKG_SHAREDIR=/usr/share/${PN}/

	insinto ${PKG_SHAREDIR}
		doinsmv res
		doinsmv media
	
	fakedir "${IMAGE}" ${PKG_SHAREDIR} "${IMAGE}"${INTO_EXE}
	fakedir ${TGT}lib/p7zip "${IMAGE}"${INTO_EXE}res/7z

	dodir ${PKG_SHAREDIR}/res/Scripts
	keepdir ${PKG_SHAREDIR}/res/Scripts

	edo chown -R ${PN}:${PN} "${IMAGE}"{${PKG_SHAREDIR},${INTO_EXE}}

	local PKG_BINDIR=${TGT}bin

	mkdir -p "${IMAGE}"${PKG_BINDIR}

	dosym ${INTO_EXE}res/pea ${PKG_BINDIR}
	dosym ${INTO_EXE}res/pealauncher ${PKG_BINDIR}
	dosym ${INTO_EXE}res/Scripts ${INTO_EXE}/res/Scripts
	dosym ${INTO_EXE}${PN} ${PKG_BINDIR}
	dosym ${PN}/res ${INTO_EXE_PARENT}res

	domenu "FreeDesktop_integration/${PN}-alt(multilingual).desktop"
}

pkg_postrm() {
	freedesktop-desktop_pkg_postrm
	freedesktop-mime_pkg_postrm
}

pkg_postinst() {
	elog "Remember to add your user to the ${PN} group."
	elog "It's needed by now for writing under ${INTO_EXE}"

	freedesktop-desktop_pkg_postinst
	freedesktop-mime_pkg_postinst
}